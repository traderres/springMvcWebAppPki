####################################################################################
# Filename:  jawr.properties
# Purpose:
#   1) Define JS and CSS bundles to be created by JAWR
#   2) Define JAWR settings
#
# If jawr.debug.on=true, then files are *not* bundled    (development mode)
# If jawr.debug.on=false, then files are bundled         (production mode)
#
# Suggestion:
#  1) In this file, set jawr.debug.on=false  (so files are bundled in production)
#  2) When debugging In local development mode, add this entry
#         -Dnet.jawr.debug.on=true
#     To tell your local Tomcat or Jetty to not combine files
####################################################################################
jawr.debug.on=false
jawr.gzip.on=true
jawr.strict.mode=true

# By default, jawr will auto-scan for non-explicity mapped files and generate a one-file bundle for each one
# -- Set this to false  to reduce startup time
jawr.factory.use.orphans.mapper=false

# This flag indicates if during the server startup we should use the data of the preprocessed bundles instead of performing the bundling process.
# If set to true, then your webapp will startup faster, but your JS code changes might not make it into the bundle
jawr.use.bundle.mapping=false


# Define a JS bundle that holds jquery, bootstrap, Angular (jba)
# NOTE:  The bundle id must end with .js
jawr.js.bundle.jba.id=/id/jquery.bootsrap.angular.js
jawr.js.bundle.jba.mappings=/resources/jquery-1.12.4/jquery-1.12.4.min.js,        \
                            /resources/bootstrap-3.3.4/dist/js/bootstrap.min.js, \
                            /resources/angular-1.5.11/angular.min.js



# Define a CSS bundle
# NOTE:  The bundle id must end with .css
jawr.css.bundle.jbad_css.id=/id/bootstrap.css
jawr.css.bundle.jbad_css.mappings=/resources/bootstrap-3.3.4/dist/css/bootstrap.min.css, \
                                  /resources/bootstrap-3.3.4/dist/css/bootstrap-theme.min.css
