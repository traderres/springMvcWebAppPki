<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lessons</groupId>
  <artifactId>springMvcWebApp</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>springMvcWebApp Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <dependencies>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.3.1.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>4.3.1.RELEASE</version>
    </dependency>


    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.3.1.RELEASE</version>
    </dependency>


    <!-- Spring Core -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>4.3.1.RELEASE</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


    <!-- Add the dependency for Java Server Template Library (jstl)  -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>


    <!-- Bridge Logging from Java Common Logging to SLF4J -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>1.7.5</version>
    </dependency>


    <!-- Send Logging from SLF4j to Logback -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
    </dependency>


    <!-- Tomcat provides the servlet classes -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
      <scope>provided</scope>
    </dependency>

      <!-- Add the dependency for your postgreSQL JDBC driver -->
      <dependency>
          <groupId>postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>9.1-901-1.jdbc4</version>
      </dependency>


      <!-- Add the dependency for the C3P0 connection pool -->
      <dependency>
          <groupId>com.mchange</groupId>
          <artifactId>c3p0</artifactId>
          <version>0.9.5.1</version>
      </dependency>

      <dependency>
          <groupId>com.google.code.gson</groupId>
          <artifactId>gson</artifactId>
          <version>2.6.2</version>
      </dependency>

      <dependency>
          <groupId>net.jawr.extensions</groupId>
          <artifactId>jawr-spring-extension</artifactId>
          <version>3.8</version>

          <exclusions>
              <!-- the jawr bundler comes with log4j, but we are using logback so exclude log4j -->
              <exclusion>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-log4j12</artifactId>
              </exclusion>
              <exclusion>
                  <groupId>log4j</groupId>
                  <artifactId>log4j</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

      <dependency>
          <!-- required to bundle css files using jawr -->
          <groupId>com.vaadin</groupId>
          <artifactId>vaadin-sass-compiler</artifactId>
          <version>0.9.12</version>
      </dependency>

      <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-web</artifactId>
          <version>4.0.3.RELEASE</version>
      </dependency>

      <dependency>
          <groupId>org.springframework.security</groupId>
          <artifactId>spring-security-config</artifactId>
          <version>4.0.3.RELEASE</version>
      </dependency>

      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>3.8.1</version>
          <scope>test</scope>
    </dependency>
  </dependencies>
    <build>
        <finalName>webapp1</finalName>

        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>

                <!-- NOTE:  The jetty 9.1.5.v2014050 version works with Java 1.7 -->
                <version>9.1.5.v20140505</version>

                <configuration>
                    <webApp>
                        <!-- If your project is called webapp1, then jetty listens on http://localhost:8080/webapp1  -->
                        <contextPath>/${project.artifactId}</contextPath>

                        <!-- Tell maven to look for the property files in src/main/config -->
                        <extraClasspath>${project.basedir}/src/main/config</extraClasspath>
                    </webApp>

                    <!-- Jetty will scan every 10 seconds to pickup front-end changes -->
                    <scanIntervalSeconds>10</scanIntervalSeconds>


                    <jettyXml>
                        <!-- Configure Jetty to use https
                             NOTES:
                                1) Do not change the **ORDER** of these files or the configuration gets screwed-up

                        -->

                        <!-- Configure your local Jetty to use your SSL files -->
                        ${project.basedir}/docs/jetty/jetty.xml,${project.basedir}/docs/jetty/jetty-ssl.xml,${project.basedir}/docs/jetty/jetty-https.xml

                    </jettyXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

